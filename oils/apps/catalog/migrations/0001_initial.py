# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-21 17:53
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import mptt.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('bio', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='AuthorAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Author')),
            ],
        ),
        migrations.CreateModel(
            name='AuthorIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='AuthorIdentifierType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=250)),
                ('subtitle', models.TextField()),
                ('authors', models.ManyToManyField(to='catalog.Author')),
            ],
        ),
        migrations.CreateModel(
            name='BookIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=16)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifiers', to='catalog.Book')),
            ],
        ),
        migrations.CreateModel(
            name='BookIdentifierType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='ClassificationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='OpenLibrary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_value', models.CharField(max_length=16)),
                ('raw_json', django.contrib.postgres.fields.jsonb.JSONField()),
                ('id_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.BookIdentifierType')),
                ('oils_book', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.Book')),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.SmallIntegerField()),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Book')),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='catalog.Subject')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='publication',
            name='publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Publisher'),
        ),
        migrations.AddField(
            model_name='classification',
            name='classification_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.ClassificationType'),
        ),
        migrations.AddField(
            model_name='bookidentifier',
            name='id_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.BookIdentifierType'),
        ),
        migrations.AddField(
            model_name='book',
            name='classifications',
            field=models.ManyToManyField(to='catalog.Classification'),
        ),
        migrations.AddField(
            model_name='book',
            name='publishers',
            field=models.ManyToManyField(through='catalog.Publication', to='catalog.Publisher'),
        ),
        migrations.AddField(
            model_name='book',
            name='subjects',
            field=models.ManyToManyField(to='catalog.Subject'),
        ),
        migrations.AddField(
            model_name='authoridentifier',
            name='id_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.AuthorIdentifierType'),
        ),
        migrations.AddField(
            model_name='author',
            name='identifiers',
            field=models.ManyToManyField(to='catalog.AuthorIdentifier'),
        ),
        migrations.AlterUniqueTogether(
            name='classification',
            unique_together=set([('classification_type', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='bookidentifier',
            unique_together=set([('id_type', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='authoridentifier',
            unique_together=set([('id_type', 'value')]),
        ),
    ]
